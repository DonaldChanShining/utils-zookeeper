/*
 * Copyright 2010-2010 LinkedIn, Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

buildscript {
  repositories {
    // in case you do not want to use mavenCentral at all
    if(project.hasProperty('buildscript.repository'))
    {
      mavenRepo urls: new File(project."buildscript.repository").toURI()
    }
    else
    {
      mavenCentral()
    }
  }
  dependencies {
    classpath 'org.linkedin:org.linkedin.gradle-plugins:1.1.0'
  }
}

apply plugin: 'org.linkedin.userConfig'
apply plugin: 'org.linkedin.spec'

topBuildDir = userConfig.top.build.dir ?: "${rootDir}/out/build"

apply plugin: 'org.linkedin.repository'

allprojects {
  apply plugin: 'idea'
  group = spec.group
  version = spec.version
}

// we use git
ideaProject {
  withXml { root ->
    root.asNode().component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
  }
}

subprojects {
  buildscript {
    allRepositories.buildscript.configure(repositories)
  }

  apply plugin: 'maven'

  allRepositories.build.configure(repositories)

  sourceCompatibility = '1.6'
  targetCompatibility = '1.6'

  buildDir = "${topBuildDir}${project.path.replace(':','/')}".toString()
}
